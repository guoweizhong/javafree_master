Ext.define("Ext.drag.Manager",{singleton:true,uses:["Ext.mixin.Inheritable"],dragCls:Ext.baseCSSPrefix+"drag-body",pointerBug:Ext.isTouch||(!Ext.supports.CSSPointerEvents||Ext.isIE10m||Ext.isOpera),constructor:function(){this.targets={};this.nativeTargets=[];Ext.onReady(this.init,this);},init:function(){Ext.getDoc().on({scope:this,dragenter:{capture:true,fn:"onNativeDragEnter"},dragleave:"onNativeDragLeave",dragover:"onNativeDragOver",drop:"onNativeDrop"});
},destroy:function(){var c=this,a=c.targets,b;c.destroying=true;for(b in a){a[b].destroy();}c.targets=null;c.callParent();c.destroying=false;},privates:{elementFromPoint:function(a,b){if(Ext.rootInheritedState.rtl){a=Ext.Element.getViewportWidth()-a;}return Ext.dom.Element.fromPagePoint(a,b,true);},getAtPoint:function(g){var f=g.cursor.current,b=g.elementMap,d=g.proxy.isUnderCursor,a=this.pointerBug&&d?g.proxy.element.dom:null,e,c;
if(a){a.style.visibility="hidden";}c=this.elementFromPoint(f.x,f.y);if(a){a.style.visibility="visible";}while(c){e=b[c.id];if(e){return e;}c=c.parentNode;}return null;},getNativeDragInfo:function(b){var a=this.nativeDragInfo;if(!a){this.nativeDragInfo=a=new Ext.drag.Info();a.isNative=true;}return a;},onDragCancel:function(){Ext.getBody().removeCls(this.dragCls);
},onDragEnd:function(b,a){b.finalize();Ext.getBody().removeCls(this.dragCls);},onDragMove:function(b,a){this.processDrag(b);},onDragStart:function(f,o){var p=this,a=f.source,m=p.targets,g=a.getGroups(),h={},c={},l={},b,n,q,d,r,k,j;l={};c={};if(g){d=Ext.Array.toMap(g);}for(b in m){n=m[b];if(!n.isDisabled()){r=false;
q=n.getGroups();if(!d&&!q){r=true;}else{if(d&&q){for(j=0,k=q.length;j<k;++j){if(d[q[j]]){r=true;break;}}}}if(r){c[b]=n;}}h[b]=n;l[n.getElement().id]=n;}f.possibleTargets=c;f.targetMap=h;f.elementMap=l;Ext.getBody().addCls(p.dragCls);p.processDrag(f);},onNativeDragEnter:function(c){var a=this.nativeTargets,b=c.target;
c.preventDefault();if(a[a.length-1]!==b){a.push(b);}},onNativeDragLeave:function(b){var a=this.nativeTargets;Ext.Array.remove(a,b.target);if(a.length===0){this.nativeDragInfo=null;}},onNativeDragOver:function(a){a.preventDefault();},onNativeDrop:function(a){a.preventDefault();this.nativeTargets.length=0;
this.nativeDragInfo=null;},processDrag:function(a){a.setActive(this.getAtPoint(a));},register:function(a){this.targets[a.getId()]=a;},unregister:function(a){if(this.destroying){return;}delete this.targets[a.getId()];}}});