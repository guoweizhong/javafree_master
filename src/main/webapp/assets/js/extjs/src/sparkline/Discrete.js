Ext.define("Ext.sparkline.Discrete",{extend:"Ext.sparkline.BarBase",alias:"widget.sparklinediscrete",config:{lineHeight:"auto",thresholdColor:null,thresholdValue:0,chartRangeMax:null,chartRangeMin:null,chartRangeClip:false},tipTpl:"{prefix}{value}{suffix}",applyValues:function(a){a=Ext.Array.map(Ext.Array.from(a),Number);
this.disabled=!(a&&a.length);this.updateConfigChange();return a;},onUpdate:function(){var c=this,b=c.values,a=c.getChartRangeMin(),d=c.getChartRangeMax(),e=c.getChartRangeClip();c.callParent(arguments);c.regionShapes={};c.min=Math.min.apply(Math,b);c.max=Math.max.apply(Math,b);c.range=c.max-c.min;c.width=c.getWidth();
c.interval=Math.floor(c.width/b.length);c.itemWidth=c.width/b.length;if(a!=null&&(e||a<c.min)){c.min=a;}if(d!=null&&(e||d>c.max)){c.max=d;}if(c.canvas){if(c.getLineHeight()==="auto"){c.setLineHeight(Math.round(c.getHeight()*0.3));}}},getRegion:function(a,b){return Math.floor(a/this.itemWidth);},getRegionFields:function(a){return{isNull:this.values[a]===undefined,value:this.values[a],offset:a};
},renderRegion:function(j,e){var l=this,q=l.values,g=l.min,m=l.max,i=l.range,c=l.interval,b=l.canvas,h=l.getHeight(),p=l.getLineHeight(),k=h-p,a,d,f,o,n=l.getThresholdColor();d=Ext.Number.constrain(q[j],g,m);o=j*c;a=Math.round(k-k*((d-g)/i));f=(n&&d<l.getThresholdValue())?n:l.getLineColor();if(e){f=l.calcHighlightColor(f);
}b.drawLine(o,a,o,a+p,f).append();}});