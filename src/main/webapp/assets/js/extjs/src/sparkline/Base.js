Ext.define("Ext.sparkline.Base",{extend:"Ext.Gadget",xtype:"sparkline",requires:["Ext.XTemplate","Ext.sparkline.CanvasCanvas","Ext.sparkline.VmlCanvas","Ext.util.Color"],cachedConfig:{lineColor:"#157fcc",defaultPixelsPerValue:3,tagValuesAttribute:"values",enableTagOptions:false,enableHighlight:true,highlightColor:null,highlightLighten:0.1,tooltipSkipNull:true,tooltipPrefix:"",tooltipSuffix:"",disableTooltips:false,disableInteraction:false,tipTpl:null},config:{values:null},baseCls:Ext.baseCSSPrefix+"sparkline",element:{tag:"canvas",reference:"element",style:{display:"inline-block",verticalAlign:"top"},listeners:{mouseenter:"onMouseEnter",mouseleave:"onMouseLeave",mousemove:"onMouseMove"},width:0,height:0},defaultBindProperty:"values",redrawQueue:{},inheritableStatics:{sparkLineTipClass:Ext.baseCSSPrefix+"sparkline-tip-target",onClassCreated:function(b){var e=b.prototype.updateConfigChange,d=b.prototype,f=b.getConfigurator().configs,c,a;
for(c in f){if(c!=="tipTpl"){a=Ext.Config.get(c).names.update;if(d[a]){d[a]=Ext.Function.createSequence(d[a],e);}else{d[a]=e;}}}}},constructor:function(a){var b=this;b.canvas=Ext.supports.Canvas?new Ext.sparkline.CanvasCanvas(b):new Ext.sparkline.VmlCanvas(b);if(!b.getDisableTooltips()){b.element.cls=Ext.sparkline.Base.sparkLineTipClass;
}Ext.apply(b,a);b.callParent([a]);},all:function(d,b,a){var c;for(c=b.length;c--;){if(a&&b[c]===null){continue;}if(b[c]!==d){return false;}}return true;},updateConfigChange:function(b){var a=this;if(a.bufferRedraw||!a.height||!a.width){a.redrawQueue[a.getId()]=a;if(!a.redrawTimer){Ext.sparkline.Base.prototype.redrawTimer=Ext.Function.requestAnimationFrame(a.processRedrawQueue);
}}else{a.redraw();}return b;},applyTipTpl:function(a){if(a&&!a.isTemplate){a=new Ext.XTemplate(a);}return a;},normalizeValue:function(b){var a;switch(b){case"undefined":b=undefined;break;case"null":b=null;break;case"true":b=true;break;case"false":b=false;break;default:a=parseFloat(b);if(b==a){b=a;}}return b;
},normalizeValues:function(c){var b,a=[];for(b=c.length;b--;){a[b]=this.normalizeValue(c[b]);}return a;},updateWidth:function(b,a){var c=this,e=c.element.dom,d=c.measurer;c.callParent([b,a]);c.canvas.setWidth(b);c.width=b;if(c.height==null&&d){c.setHeight(parseInt(d.getCachedStyle(e.parentNode,"line-height"),10));
}},updateHeight:function(a,c){var b=this;b.callParent([a,c]);b.canvas.setHeight(a);b.height=a;},setValues:function(b){var c=this,a=c.getValues();b=b==null?[]:Ext.Array.from(b);c.values=b;c.callParent([b]);if(b===a){c.updateValues([b,a]);}},redraw:function(){var a=this;if(!a.destroyed){a.canvas.onOwnerUpdate();
a.canvas.reset();if(a.getValues()){a.onUpdate();a.renderGraph();}}},onUpdate:Ext.emptyFn,renderGraph:function(){var a=true;if(this.disabled){this.canvas.reset();a=false;}return a;},onMouseEnter:function(a){this.onMouseMove(a);},onMouseMove:function(b){var a=this;a.canvasRegion=a.canvasRegion||a.canvas.el.getRegion();
a.currentPageXY=b.getPoint();a.redraw();},onMouseLeave:function(){var a=this;a.canvasRegion=a.currentPageXY=a.targetX=a.targetY=null;a.redraw();a.hideTip();},updateDisplay:function(){var b=this,a=b.getValues(),c,d;if(a&&a.length&&b.currentPageXY&&b.canvasRegion.contains(b.currentPageXY)){d=b.getRegion(b.currentPageXY[0]-b.canvasRegion.left,(b.canvasRegion.bottom-1)-b.currentPageXY[1]);
if(d!=null&&b.isValidRegion(d,a)){if(!b.disableHighlight){b.renderHighlight(d);}c=b.getRegionTooltip(d);}b.fireEvent("sparklineregionchange",b);if(c){b.getSharedTooltip().setHtml(c);b.showTip();}}if(!c){b.hideTip();}},getRegion:Ext.emptyFn,getRegionTooltip:function(m){var l=this,e=[],o=l.getTipTpl(),f,g,d,h,b,n,k,c,a;
f=l.getRegionFields(m);n=l.tooltipFormatter;if(n){return n(l,l,f);}if(!o){return"";}if(!Ext.isArray(f)){f=[f];}g=l.tooltipFormatFieldlist;d=l.tooltipFormatFieldlistKey;if(g&&d){h=[];for(c=f.length;c--;){b=f[c][d];if((a=Ext.Array.indexOf(b,g))!==-1){h[a]=f[c];}}f=h;}k=f.length;for(a=0;a<k;a++){if(!f[a].isNull||!l.getTooltipSkipNull()){Ext.apply(f[a],{prefix:l.getTooltipPrefix(),suffix:l.getTooltipSuffix()});
e.push(o.apply(f[a]));}}if(e.length){return e.join("<br>");}return"";},getRegionFields:Ext.emptyFn,calcHighlightColor:function(a){var c=this,e=c.getHighlightColor(),b=c.getHighlightLighten(),d;if(e){return e;}if(b){d=Ext.util.Color.fromString(a);if(d){d.lighten(b);a=d.toHex();}}return a;},destroy:function(){delete this.redrawQueue[this.getId()];
this.callParent();},privates:{hideTip:Ext.privateFn,isValidRegion:function(b,a){return b<a.length;},showTip:Ext.privateFn}},function(b){var a=b.prototype;a.getSharedTooltip=function(){var c=this,d=c.tooltip;if(!d){a.tooltip=d=b.constructTip();}return d;};b.onClassCreated(b);a.processRedrawQueue=function(){var c=a.redrawQueue,d;
for(d in c){c[d].redraw();}a.redrawQueue={};a.redrawTimer=0;};if(!Ext.supports.Canvas){b.prototype.element={tag:"span",reference:"element",listeners:{mouseenter:"onMouseEnter",mouseleave:"onMouseLeave",mousemove:"onMouseMove"},style:{display:"inline-block",position:"relative",overflow:"hidden",margin:"0px",padding:"0px",verticalAlign:"top",cursor:"default"},children:[{tag:"svml:group",reference:"groupEl",coordorigin:"0 0",coordsize:"0 0",style:"position:absolute;width:0;height:0;pointer-events:none"}]};
}});