Ext.define("Ext.sparkline.Box",{extend:"Ext.sparkline.Base",alias:"widget.sparklinebox",config:{raw:false,boxLineColor:"#000",boxFillColor:"#cdf",whiskerColor:"#000",outlierLineColor:"#333",outlierFillColor:"#fff",medianColor:"#f00",showOutliers:true,outlierIQR:1.5,spotRadius:1.5,target:null,targetColor:"#4a2",chartRangeMin:null,chartRangeMax:null},tipTpl:["{field:this.fields}: {value}",{fields:function(b){var a={lq:"Lower Quartile",med:"Median",uq:"Upper Quartile",lo:"Left Outlier",ro:"Right Outlier",lw:"Left Whisker",rw:"Right Whisker"};
return a[b];}}],tooltipFormatFieldlistKey:"field",quartile:function(a,c){var b;if(c===2){b=Math.floor(a.length/2);return a.length%2?a[b]:(a[b-1]+a[b])/2;}else{if(a.length%2){b=(a.length*c+c)/4;return b%1?(a[Math.floor(b)]+a[Math.floor(b)-1])/2:a[b-1];}else{b=(a.length*c+2)/4;return b%1?(a[Math.floor(b)]+a[Math.floor(b)-1])/2:a[b-1];
}}},applyValues:function(a){a=Ext.Array.map(Ext.Array.from(a),Number);if(!this.raw){a.sort(function(d,c){return d-c;});}this.disabled=!(a&&a.length);this.updateConfigChange();return a;},getRegion:function(){return 1;},getRegionFields:function(){var a=[{field:"lq",value:this.quartiles[0]},{field:"med",value:this.quartiles[1]},{field:"uq",value:this.quartiles[2]}];
if(this.loutlier!==undefined){a.push({field:"lo",value:this.loutlier});}if(this.routlier!==undefined){a.push({field:"ro",value:this.routlier});}if(this.lwhisker!==undefined){a.push({field:"lw",value:this.lwhisker});}if(this.rwhisker!==undefined){a.push({field:"rw",value:this.rwhisker});}return a;},renderHighlight:Ext.emptyFn,renderGraph:function(){var D=this,k=D.canvas,g=D.values,n=g.length,C=D.getWidth(),e=D.getHeight(),p=D.getChartRangeMin(),s=D.getChartRangeMax(),w=p==null?Math.min.apply(Math,g):p,B=s==null?Math.max.apply(Math,g):s,y=0,v,A,h,r,q,o,b,l,z,x,f,E=D.getSpotRadius(),a=D.getOutlierLineColor(),j=D.getOutlierFillColor(),u=D.getShowOutliers(),t=D.getOutlierIQR(),d=D.getLineColor(),c=D.getWhiskerColor(),m=D.getTargetColor();
if(!D.callParent()){return;}if(D.raw){if(u&&g.length>5){A=g[0];v=g[1];r=g[2];q=g[3];o=g[4];b=g[5];l=g[6];}else{v=g[0];r=g[1];q=g[2];o=g[3];b=g[4];}}else{r=D.quartile(g,1);q=D.quartile(g,2);o=D.quartile(g,3);h=o-r;if(u){v=b=null;for(z=0;z<n;z++){if(v==null&&g[z]>r-(h*t)){v=g[z];}if(g[z]<o+(h*t)){b=g[z];
}}A=g[0];l=g[n-1];}else{v=g[0];b=g[n-1];}}D.quartiles=[r,q,o];D.lwhisker=v;D.rwhisker=b;D.loutlier=A;D.routlier=l;f=C/(B-w+1);if(u){y=Math.ceil(E);C-=2*Math.ceil(E);f=C/(B-w+1);if(A<v){k.drawCircle((A-w)*f+y,e/2,E,a,j).append();}if(l>b){k.drawCircle((l-w)*f+y,e/2,E,a,j).append();}}k.drawRect(Math.round((r-w)*f+y),Math.round(e*0.1),Math.round((o-r)*f),Math.round(e*0.8),D.getBoxLineColor(),D.getBoxFillColor()).append();
k.drawLine(Math.round((v-w)*f+y),Math.round(e/2),Math.round((r-w)*f+y),Math.round(e/2),d).append();k.drawLine(Math.round((v-w)*f+y),Math.round(e/4),Math.round((v-w)*f+y),Math.round(e-e/4),c).append();k.drawLine(Math.round((b-w)*f+y),Math.round(e/2),Math.round((o-w)*f+y),Math.round(e/2),d).append();k.drawLine(Math.round((b-w)*f+y),Math.round(e/4),Math.round((b-w)*f+y),Math.round(e-e/4),c).append();
k.drawLine(Math.round((q-w)*f+y),Math.round(e*0.1),Math.round((q-w)*f+y),Math.round(e*0.9),D.getMedianColor()).append();if(D.target){x=Math.ceil(D.spotRadius);k.drawLine(Math.round((D.target-w)*f+y),Math.round((e/2)-x),Math.round((D.target-w)*f+y),Math.round((e/2)+x),m).append();k.drawLine(Math.round((D.target-w)*f+y-x),Math.round(e/2),Math.round((D.target-w)*f+y+x),Math.round(e/2),m).append();
}if(D.currentPageXY&&D.canvasRegion.contains(D.currentPageXY)){D.currentRegion=null;D.updateDisplay();}k.render();}});