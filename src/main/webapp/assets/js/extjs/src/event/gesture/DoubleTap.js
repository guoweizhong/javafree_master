Ext.define("Ext.event.gesture.DoubleTap",{extend:"Ext.event.gesture.SingleTouch",priority:300,config:{moveDistance:8,tapDistance:24,maxDuration:300},handledEvents:["singletap","doubletap"],singleTapTimer:null,startTime:0,lastTapTime:0,onTouchStart:function(d){var c=this,b=c.callParent([d]),a;if(b!==false){c.isStarted=true;
a=c.lastStartPoint=d.changedTouches[0].point;c.startPoint=c.startPoint||a;c.startTime=d.time;clearTimeout(c.singleTapTimer);}return b;},onTouchMove:function(c){var b=this,a=c.changedTouches[0].point,d=Ext.Element.getViewportScale(),f=Math.round(Math.abs(a.getDistanceTo(b.lastStartPoint)*d));if(f>=b.getMoveDistance()){return b.cancel(c);
}},onTouchEnd:function(h){var j=this,g=j.getMaxDuration(),b=h.time,i=h.target,k=j.lastTapTime,d=j.lastTarget,l=h.changedTouches[0].point,f,c,a;j.lastTapTime=b;j.lastTarget=i;if(k){f=b-k;if(f<=g){c=Ext.Element.getViewportScale();a=Math.round(Math.abs(l.getDistanceTo(j.startPoint)*c));if(a<=j.getTapDistance()){if(i!==d){return j.cancel(h);
}j.lastTarget=null;j.lastTapTime=0;j.fire("doubletap",h,{touch:h.changedTouches[0],duration:f});return j.callParent([h]);}}}if(b-j.startTime>g){j.fire("singletap",h);j.reset();}else{j.setSingleTapTimer(h);}},setSingleTapTimer:function(b){var a=this;a.singleTapTimer=Ext.defer(function(){a.fire("singletap",b);
a.reset();},a.getMaxDuration());},reset:function(){var a=this;clearTimeout(a.singleTapTimer);a.startTime=a.lastTapTime=0;a.lastStartPoint=a.startPoint=a.singleTapTimer=null;return a.callParent();}},function(a){var b=Ext.manifest.gestures;a.instance=new a(b&&b.doubleTap);});