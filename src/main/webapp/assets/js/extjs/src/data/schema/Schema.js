Ext.define("Ext.data.schema.Schema",{mixins:["Ext.mixin.Factoryable"],requires:["Ext.util.ObjectTemplate","Ext.data.schema.OneToOne","Ext.data.schema.ManyToOne","Ext.data.schema.ManyToMany","Ext.data.schema.Namer"],alias:"schema.default",aliasPrefix:"schema.",isSchema:true,type:"default",statics:{instances:{},clearInstance:function(b){var a=this.instances[b];
delete this.instances[b];if(a){a.clear(true);a.destroy();}},get:function(d){var f=this,c=f.instances,g="default",b=d&&Ext.isString(d),a,e;if(d){if(d.isSchema){return d;}g=b?d:(d.id||g);}if(!(a=c[g])){c[g]=a=f.create(d);a.id=g;}else{if(d&&!b){if(g!=="default"){Ext.raise("Only the default Schema instance can be reconfigured");
}e=Ext.merge({},a.config);Ext.merge(e,d);a.setConfig(e);a.config=e;a.setConfig=function(){Ext.raise("The schema can only be reconfigured once");};}}return a;},lookupEntity:function(a){var d=null,f=this.instances,c,b,e;if(a){if(a.isEntity){d=a.self;}else{if(Ext.isFunction(a)){d=a;}else{if(Ext.isString(a)){d=Ext.ClassManager.get(a);
if(d&&(!d.prototype||!d.prototype.isEntity)){d=null;}if(!d){for(b in f){e=f[b];c=e.getEntity(a);if(c){if(d){Ext.raise('Ambiguous entity name "'+a+'". Defined by schema "'+d.schema.type+'" and "'+b+'"');}d=c;}}}if(!d){Ext.raise('No such Entity "'+a+'".');}}}}}return d;}},assocCount:0,entityCount:0,config:{defaultIdentifier:null,keyCheckDelay:10,namer:"default",namespace:null,proxy:{type:"ajax",url:"{prefix}/{entityName}"},urlPrefix:""},onClassExtended:function(a,c){var b=c.alias;
if(b&&!c.type){if(!Ext.isString(b)){b=b[0];}a.prototype.type=b.substring(this.prototype.aliasPrefix.length);}},constructor:function(a){this.initConfig(a);this.clear();},applyDefaultIdentifier:function(a){return a&&Ext.Factory.dataIdentifier(a);},applyNamer:function(b){var a=Ext.data.schema.Namer.create(b);
a.schema=this;return a;},applyNamespace:function(b){if(b){var a=b.length-1;if(b.charAt(a)!=="."){b+=".";}}return b;},applyProxy:function(a){return Ext.util.ObjectTemplate.create(a);},eachAssociation:function(d,c){var b=this.associations,a;for(a in b){if(b.hasOwnProperty(a)){if(d.call(c,a,b[a])===false){break;
}}}},eachEntity:function(c,b){var d=this.entities,a;for(a in d){if(d.hasOwnProperty(a)){if(c.call(b,a,d[a].cls)===false){break;}}}},getAssociation:function(a){var b=this.associations[a];return b||null;},getEntity:function(a){var b=this.entityClasses[a]||this.entities[a];return(b&&b.cls)||null;},getEntityName:function(a){var d=this.getNamespace(),c,b;
if(typeof a==="string"){b=a;}else{b=a.$className||null;}if(b){if(d){c=d.length;if(b.substring(0,c)!==d){return b;}}if(c){b=b.substring(c);}}return b;},hasAssociations:function(a){a=a.entityName||a;return !!this.associationEntityMap[a];},hasEntity:function(a){var b=this.getEntityName(a);return !!(this.entities[b]||this.entityClasses[b]);
},addMatrix:function(m,g,d,c,q){var r=this,k=r.getNamer(),o=r.associations,a=r.entities,f=c.type,p=q.type,e=c.field||k.apply("idField",f),i=q.field||k.apply("idField",p),b=c.role||k.matrixRole(d,f),l=q.role||k.matrixRole(d,p),n,h,j;h=a[f]||(a[f]={cls:null,name:f,associations:{}});j=a[p]||(a[p]={cls:null,name:p,associations:{}});
++r.assocCount;o[g]=n=new Ext.data.schema.ManyToMany({name:g,schema:r,definedBy:m,left:{cls:h.cls,type:f,role:b,field:e,associationKey:c.associationKey},right:{cls:j.cls,type:p,role:l,field:i,associationKey:q.associationKey}});h.associations[n.right.role]=n.right;j.associations[n.left.role]=n.left;if(h.cls){r.associationEntityMap[h.cls.entityName]=true;
}if(j.cls){r.associationEntityMap[j.cls.entityName]=true;}r.decorateModel(n);},addReference:function(p,a,o,b,q){var t=this,m=t.getNamer(),d=t.entities,r=t.associations,l=p.entityName,e=o.association,i=o.child,k=o.parent,n=o.role,s=o.type||k||i,j=o.inverse,h=Ext.isString(j)?{role:j}:j,g=h&&h.role,c,f;
if(!n){if(!a||o.legacy){n=m.apply("uncapitalize",s);}else{n=m.apply("fieldRole",a.name);}}if(!g){g=m.inverseFieldRole(l,b,n,s);}if(!e){if(b){e=m.oneToOne(p,g,s,n);}else{e=m.manyToOne(p,g,s,n);}}if(q&&e in r){if(q(r[e],e,g,n)!==false){return;}}if(e in r){Ext.raise('Duplicate association: "'+e+'" declared by '+l+(a?("."+a.name):"")+" (collides with "+r[e].definedBy.entityName+")");
}if(a&&a.definedBy===d[s]){Ext.raise("ForeignKey reference should not be owned by the target model");}c=d[s]||(d[s]={cls:null,name:s,associations:{}});f=b?Ext.data.schema.OneToOne:Ext.data.schema.ManyToOne;e=new f({name:e,owner:i?"left":(k?"right":null),definedBy:p,schema:t,field:a,nullable:a?!!a.allowBlank:true,left:{cls:p,type:l,role:g,extra:h},right:{cls:c.cls,type:s,role:n,extra:o},meta:o});
p.associations[n]=e.right;c.associations[g]=e.left;if(a){a.reference=e.right;p.references.push(a);}++t.assocCount;t.associationEntityMap[l]=true;if(c.cls){t.associationEntityMap[c.cls.entityName]=true;}r[e.name]=e;if(e.right.cls){t.decorateModel(e);}},privates:{addEntity:function(d){var h=this,g=h.entities,k=d.entityName,l=g[k],f=d.fields,c,j,e,b,a;
if(!l){g[k]=l={name:k,associations:{}};}else{if(l.cls){Ext.raise('Duplicate entity name "'+k+'": '+l.cls.$className+" and "+d.$className);}else{c=l.associations;for(a in c){c[a].inverse.cls=d;h.associationEntityMap[k]=true;h.decorateModel(c[a].association);}}}l.cls=d;d.prototype.associations=d.associations=l.associations;
h.entityClasses[d.$className]=l;++h.entityCount;for(e=0,b=f.length;e<b;++e){j=f[e];if(j.reference){h.addReferenceDescr(d,j);}}},addMatrices:function(f,a){var e=this,b,d,c;if(Ext.isString(a)){e.addMatrixDescr(f,null,a);}else{if(a[0]){for(b=0,d=a.length;b<d;++b){e.addMatrixDescr(f,null,a[b]);}}else{for(c in a){e.addMatrixDescr(f,c,a[c]);
}}}},addMatrixDescr:function(f,b,g){var h=this,k=f.entityName,e=h.associations,i=h.getNamer(),d=g.left,n=g.right,m,c;if(Ext.isString(g)){if(g.charAt(0)==="#"){d={type:k};n={type:g.substring(1)};}else{if(g.charAt(m=g.length-1)==="#"){d={type:g.substring(0,m)};n={type:k};}else{if(i.apply("multiRole",k)<i.apply("multiRole",g)){d={type:k};
n={type:g};}else{d={type:g};n={type:k};}}}}else{Ext.Assert.isString(g.type,'No "type" for manyToMany in '+k);c=g.relation;if(d||(!n&&i.apply("multiRole",k)<i.apply("multiRole",g.type))){if(!d||d===true){d={type:k};}else{d=Ext.apply({type:k},d);}n=g;}else{if(!n||n===true){n={type:k};}else{n=Ext.apply({type:k},n);
}d=g;}}if(!b){b=i.manyToMany(c,d.type,n.type);}if(!(b in e)){h.addMatrix(f,b,c,d,n);}else{var l=e[b],j=[l.kind,l.left.type,l.left.role,l.left.field,l.right.type,l.right.role,l.right.field].join("|");delete e[b];h.addMatrix(f,b,c,d,n);var a=e[b];e[b]=l;l.left.cls.associations[l.right.role]=l.right;l.right.cls.associations[l.left.role]=l.left;
--h.assocCount;a=[a.kind,a.left.type,a.left.role,a.left.field,a.right.type,a.right.role,a.right.field].join("|");if(j!=a){Ext.log.warn(b+"("+l.definedBy.entityName+"): "+j);Ext.log.warn(b+"("+k+"): "+a);Ext.raise('Conflicting association: "'+b+'" declared by '+k+" was previously declared by "+l.definedBy.entityName);
}}},addReferenceDescr:function(b,d){var a=this,c=d.$reference;if(Ext.isString(c)){c={type:c};}else{c=Ext.apply({},c);}a.addReference(b,d,c,d.unique);},addBelongsTo:function(a,b){this.addKeylessSingle(a,b,false);},addHasOne:function(a,b){this.addKeylessSingle(a,b,true);},addKeylessSingle:function(b,e,d){var a,c;
e=Ext.apply({},this.checkLegacyAssociation(b,e));e.type=this.getEntityName(e.child||e.parent||e.type);a=e.foreignKey||(e.type.toLowerCase()+"_id");c=b.getField(a);e.fromSingle=true;if(c){c.$reference=e;c.unique=true;e.legacy=true;Ext.log.warn("Using foreignKey is deprecated, use a keyed association. See Ext.data.field.Field.reference");
}this.addReference(b,c,e,d);},addHasMany:function(e,j){var k=this,g=k.entities,b=k.pending,m,a,l,i,h,f,c,d;j=Ext.apply({},this.checkLegacyAssociation(e,j));j.type=this.getEntityName(j.child||j.parent||j.type);a=j.type;i=g[a];m=i&&i.cls;if(m){a=e.entityName;h=j.foreignKey||(a.toLowerCase()+"_id");delete j.foreignKey;
d=Ext.apply({},j.inverse);delete j.inverse;f=Ext.apply({},j);delete f.type;j=Ext.apply({type:a,inverse:f},d);c=f.child;if(c){delete f.child;j.parent=a;}l=m.getField(h);if(l){l.$reference=j;j.legacy=true;Ext.log.warn("Using foreignKey is deprecated, use a keyed association. See Ext.data.field.Field.reference");
}k.addReference(m,l,j,false,function(q,s,o,t){var n=!!q.meta.fromSingle&&m===q.left.cls,p,u;if(n){p=m.entityName;u=e.entityName;Ext.raise('hasMany ("'+u+'") and belongsTo ("'+p+'") should not be used in conjunction to declare a relationship. Use only one.');}return n;});}else{if(!b[a]){b[a]=[];}b[a].push([e,j]);
}},checkLegacyAssociation:function(b,c){if(Ext.isString(c)){c={type:c};}else{c=Ext.apply({},c);}if(c.model){c.type=c.model;delete c.model;}var a=c.associatedName||c.name;if(a){delete c.associatedName;delete c.name;c.role=a;}return c;},afterKeylessAssociations:function(b){var f=this.pending,c=b.entityName,e=f[c],d,a;
if(e){for(d=0,a=e.length;d<a;++d){this.addHasMany.apply(this,e[d]);}delete f[c];}},clear:function(b){var a=this,c=a.timer;delete a.setConfig;if(c){window.clearTimeout(c);a.timer=null;}a.associations={};a.associationEntityMap={};a.entities={};a.entityClasses={};a.pending={};a.assocCount=a.entityCount=0;
if(b){a.setNamespace(null);}},constructProxy:function(d){var b=this,c=Ext.Object.chain(d),a=b.getProxy();c.schema=b;c.prefix=b.getUrlPrefix();return a.apply(c);},applyDecoration:function(g){var e=this,a=g.inverse.cls,f=e.getNamer(),c,b,d;if(a&&!g.decorated){g.decorated=true;d=a.prototype;if(!(c=g.getterName)){g.getterName=c=f.getterName(g);
}d[c]=g.createGetter();if(g.createSetter){if(!(b=g.setterName)){g.setterName=b=f.setterName(g);}d[b]=g.createSetter();}}},decorateModel:function(a){this.applyDecoration(a.left);this.applyDecoration(a.right);},processKeyChecks:function(d){var f=this,b=f.keyCheckQueue,g=f.timer,a,c,e;if(g){window.clearTimeout(g);
f.timer=null;}if(!b){return;}do{b=f.keyCheckQueue;f.keyCheckQueue=[];for(c=0,a=b.length;c<a;++c){e=b[c];e.role.checkKeyForDrop(e.record);}}while(d&&f.keyCheckQueue.length);},queueKeyCheck:function(a,e){var c=this,b=c.keyCheckQueue,d=c.timer;if(!b){c.keyCheckQueue=b=[];}b.push({record:a,role:e});if(!d){c.timer=d=Ext.Function.defer(c.processKeyChecks,c.getKeyCheckDelay(),c);
}},rankEntities:function(){var e=this,f=e.entities,a=Ext.Object.getKeys(f),d=a.length,c,b;e.nextRank=1;a.sort();for(b=0;b<d;++b){c=f[a[b]].cls;if(!c.rank){e.rankEntity(c);}}e.topoStack=null;},rankEntity:function(e){var c=e.associations,g,f,a;var d=this.topoStack||(this.topoStack=[]),b=e.entityName;d.push(b);
if(e.rank===0){Ext.raise(b+" has circular foreign-key references: "+d.join(" --> "));}e.rank=0;for(a in c){f=c[a];if(!f.left&&f.association.field){g=f.cls;if(!g.rank){this.rankEntity(g);}}}e.rank=this.nextRank++;d.pop();}}});