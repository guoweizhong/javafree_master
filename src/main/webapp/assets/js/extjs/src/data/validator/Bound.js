Ext.define("Ext.data.validator.Bound",{extend:"Ext.data.validator.Validator",alias:"data.validator.bound",type:"bound",config:{min:undefined,max:undefined,emptyMessage:"Must be present",minOnlyMessage:"Value must be greater than {0}",maxOnlyMessage:"Value must be less than {0}",bothMessage:"Value must be between {0} and {1}"},resetMessages:function(){this._bothMsg=this._minMsg=this._maxMsg=null;
},updateMin:function(){this.resetMessages();},updateMax:function(){this.resetMessages();},updateMinOnlyMessage:function(){this.resetMessages();},updateMaxOnlyMessage:function(){this.resetMessages();},updateBothMessage:function(){this.resetMessages();},validate:function(e){var d=this,c=d.getMin(),a=d.getMax(),b=(c!=null),g=(a!=null),f=this.validateValue(e);
if(f!==true){return f;}e=d.getValue(e);if(b&&g){if(e<c||e>a){f=d._bothMsg||(d._bothMsg=Ext.String.format(d.getBothMessage(),c,a));}}else{if(b){if(e<c){f=d._minMsg||(d._minMsg=Ext.String.format(d.getMinOnlyMessage(),c));}}else{if(g){if(e>a){f=d._maxMsg||(d._maxMsg=Ext.String.format(d.getMaxOnlyMessage(),a));
}}}}return f;},validateValue:function(a){if(a===undefined||a===null){return this.getEmptyMessage();}return true;},getValue:Ext.identityFn});