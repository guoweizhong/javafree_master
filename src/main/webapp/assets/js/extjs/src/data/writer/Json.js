Ext.define("Ext.data.writer.Json",{extend:"Ext.data.writer.Writer",alternateClassName:"Ext.data.JsonWriter",alias:"writer.json",config:{rootProperty:undefined,encode:false,allowSingle:true,expandData:false},constructor:function(a){if(a&&a.hasOwnProperty("root")){a=Ext.apply({},a);a.rootProperty=a.root;
delete a.root;Ext.log.warn('Ext.data.writer.Json: Using the deprecated "root" configuration. Use "rootProperty" instead.');}this.callParent([a]);},getExpandedData:function(d){var b=d.length,e=0,h,a,f,c,g,k=function(i,j){var l={};l[i]=j;return l;};for(;e<b;e++){h=d[e];for(a in h){if(h.hasOwnProperty(a)){f=a.split(".");
c=f.length-1;if(c>0){g=h[a];for(;c>0;c--){g=k(f[c],g);}h[f[0]]=h[f[0]]||{};Ext.Object.merge(h[f[0]],g);delete h[a];}}}}return d;},writeRecords:function(e,f){var d=this,a=d.getRootProperty(),c,g,b;if(d.getExpandData()){f=d.getExpandedData(f);}if(d.getAllowSingle()&&f.length===1){f=f[0];g=true;}b=this.getTransform();
if(b){f=b(f,e);}if(d.getEncode()){if(a){e.setParam(a,Ext.encode(f));}else{Ext.raise("Must specify a root when using encode");}}else{if(g||(f&&f.length)){c=e.getJsonData()||{};if(a){c[a]=f;}else{c=f;}e.setJsonData(c);}}return e;}});