Ext.define("Ext.mixin.FocusableContainer",{extend:"Ext.Mixin",requires:["Ext.util.KeyNav"],mixinConfig:{id:"focusablecontainer"},isFocusableContainer:true,focusableContainer:false,resetFocusPosition:false,activeChildTabIndex:0,inactiveChildTabIndex:-1,allowFocusingDisabledChildren:false,focusableContainerEl:"el",privates:{initFocusableContainer:function(c){var b,d,a;
if(this.focusableContainer){c=c!=null?c:true;this.doInitFocusableContainer(c);}else{b=this.getFocusables();for(d=0,a=b.length;d<a;d++){b[d].ownerFocusableContainer=null;}}},doInitFocusableContainer:function(a){var c=this,b=c.focusableContainerEl,d;if(!b.isElement){b=c.focusableContainerEl=c[b];}if(c.initFocusableContainerKeyNav){c.initFocusableContainerKeyNav(b);
}if(a){c.clearFocusables();if(!c.isDisabled()){d=c.findNextFocusableChild({step:1})||c.findNextFocusableChild({beforeRender:true});if(d){c.activateFocusable(d);}}}d=c.findNextFocusableChild({firstTabbable:true});c.activateFocusableContainer(!!d&&!c.isDisabled());},initFocusableContainerKeyNav:function(a){var b=this;
if(!b.focusableKeyNav){a=a||b.focusableContainerEl;b.focusableKeyNav=new Ext.util.KeyNav({target:a,disabled:true,eventName:"keydown",processEvent:b.processFocusableContainerKeyEvent,processEventScope:b,scope:b,tab:b.onFocusableContainerTabKey,enter:{handler:b.onFocusableContainerEnterKey,ctrl:false,shift:false,alt:false},space:{handler:b.onFocusableContainerSpaceKey,ctrl:false,shift:false,alt:false},up:{handler:b.onFocusableContainerUpKey,ctrl:false,shift:false,alt:false},down:{handler:b.onFocusableContainerDownKey,ctrl:false,shift:false,alt:false},left:{handler:b.onFocusableContainerLeftKey,ctrl:false,shift:false,alt:false},right:{handler:b.onFocusableContainerRightKey,ctrl:false,shift:false,alt:false}});
}},destroyFocusableContainer:function(){this.focusableKeyNav=Ext.destroy(this.focusableKeyNav);},activateFocusableContainer:function(b){var a=this.focusableKeyNav;if(a){a.setDisabled(!b);}},isFocusableContainerActive:function(){var a=this.focusableKeyNav;return a?!a.disabled:false;},getFocusables:function(){return this.items.items;
},initDefaultFocusable:function(){var g=this,b=false,c,f,d,a,e;c=g.getFocusables();a=c.length;if(!a){return;}for(d=0;d<a;d++){f=c[d];if(!f.isDisabled()&&f.isFocusable()){b=true;break;}}if(!b){return;}f=g.findNextFocusableChild({items:c,step:true});if(f){g.activateFocusable(f);}return f;},clearFocusables:function(f){var e=this,b=e.getFocusables(),a=b.length,d,c;
for(c=0;c<a;c++){d=b[c];if(!d.destroyed&&d.focusable&&d.isTabbable()){e.deactivateFocusable(d);}}},processFocusableContainerKeyEvent:function(a){if(!Ext.fly(a.target).isInputField()){return a;}},activateFocusable:function(a){a.setTabIndex(this.activeChildTabIndex);},deactivateFocusable:function(a){a.setTabIndex(this.inactiveChildTabIndex);
},onFocusableContainerTabKey:function(){return true;},onFocusableContainerEnterKey:function(){return true;},onFocusableContainerSpaceKey:function(){return true;},onFocusableContainerUpKey:function(a){a.preventDefault();return this.moveChildFocus(a,false);},onFocusableContainerDownKey:function(a){a.preventDefault();
return this.moveChildFocus(a,true);},onFocusableContainerLeftKey:function(a){a.preventDefault();return this.moveChildFocus(a,false);},onFocusableContainerRightKey:function(a){a.preventDefault();return this.moveChildFocus(a,true);},getFocusableFromEvent:function(a){var b=Ext.Component.from(a);if(!b){Ext.raise("No focusable child found for keyboard event!");
}return b;},moveChildFocus:function(b,a){var c=this.getFocusableFromEvent(b);return this.focusChild(c,a,b);},focusChild:function(c,a){var b=this.findNextFocusableChild({child:c,step:a});if(b){b.focus();}return b;},findNextFocusableChild:function(l){var k=l.beforeRender,g=l.firstTabbable,f,j,a,b,h,d,e,c;
f=l.items||this.getFocusables();b=l.step!=null?l.step:1;a=l.child;c=!!this.allowFocusingDisabledChildren;h=Ext.Array.indexOf(f,a);b=b===true?1:b===false?-1:b;e=f.length;d=b>0?(h<e?h+b:0):(h>0?h+b:e-1);for(;;d+=b){if(h<0&&(d>=e||d<0)){return null;}else{if(d>=e){d=-1;continue;}else{if(d<0){d=e;continue;
}else{if(d===h){return null;}}}}j=f[d];if(!j||!j.focusable||(j.isDisabled()&&!c)){continue;}if(g){if(j.isTabbable&&j.isTabbable()){return j;}}else{if(k||(j.isFocusable&&j.isFocusable())){return j;}}}return null;},onFocusEnter:function(c){var a=this,b=c.toComponent,d;if(b===a){d=a.initDefaultFocusable();
if(d){d.focus();}}a.activateFocusableContainer(true);},onFocusLeave:function(b){var a=this,c;if(a.resetFocusPosition){a.clearFocusables();a.initDefaultFocusable();}},beforeFocusableChildBlur:Ext.privateFn,afterFocusableChildBlur:Ext.privateFn,beforeFocusableChildFocus:function(b){var a=this;if(!a.focusableContainer||a.destroying||a.destroyed){return;
}a.clearFocusables();a.activateFocusable(b);},afterFocusableChildFocus:function(b){var a=this;if(!a.focusableContainer||a.destroying||a.destroyed){return;}a.lastFocusedChild=b;},onFocusableChildAdd:function(b){var a=this;if(b.focusable){b.ownerFocusableContainer=a;}},onFocusableChildRemove:function(c){var b=this,a;
c.ownerFocusableContainer=null;if(c===b.lastFocusedChild){b.lastFocusedChild=null;a=b.initDefaultFocusable();if(c.hasFocus){a=a||c.findFocusTarget();if(a){a.focus();}}}c=a||b.findNextFocusableChild({step:1,beforeRender:true});if(!c){b.activateFocusableContainer(false);}},beforeFocusableChildEnable:Ext.privateFn,onFocusableChildEnable:function(c){var a=this,b;
if(!a.focusableContainer||a.destroying||a.destroyed){return;}if(a.containsFocus){b=Ext.ComponentManager.getActiveComponent();a.clearFocusables();a.activateFocusable(b);}else{if(a.resetFocusPosition||a.lastFocusedChild==null){a.clearFocusables();if(c.hasFocus){a.activateFocusable(c);b=c;}}else{a.deactivateFocusable(c);
if(c===a.lastFocusedChild){a.clearFocusables();a.activateFocusable(c);}b=a.findNextFocusableChild({firstTabbable:true});}}if(!b){a.initDefaultFocusable();}a.activateFocusableContainer(true);},beforeFocusableChildDisable:function(c){var b=this,a;if(!b.focusableContainer||b.destroying||b.destroyed){return;
}if(c.hasFocus){a=b.findNextFocusableChild({child:c})||c.findFocusTarget();if(a){a.focus();}}},onFocusableChildDisable:function(c){var b=this,a;if(!b.focusableContainer||b.destroying||b.destroyed){return;}a=b.findNextFocusableChild({firstTabbable:true});if(!a){a=b.initDefaultFocusable();}if(!a){b.activateFocusableContainer(false);
}},beforeFocusableChildHide:function(a){return this.beforeFocusableChildDisable(a);},onFocusableChildHide:function(a){return this.onFocusableChildDisable(a);},beforeFocusableChildShow:function(a){return this.beforeFocusableChildEnable(a);},onFocusableChildShow:function(a){return this.onFocusableChildEnable(a);
},onFocusableChildMasked:Ext.privateFn,onFocusableChildDestroy:Ext.privateFn,onFocusableChildUpdate:Ext.privateFn},deprecated:{7:{configs:{enableFocusableContainer:"focusableContainer"}}}});