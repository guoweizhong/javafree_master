Ext.define("Ext.mixin.StoreWatcher",{mixinId:"storewatcher",config:{dataSource:null,owner:null,ownerListeners:{destroyable:true,storechange:"onStoreChange"},sourceListeners:null,store:null,storeListeners:null},afterClassMixedIn:function(d){var a=this.getConfigurator(),c=d.prototype,b={},e;for(e in a.configs){if(c.hasOwnProperty(e)){b[e]=c[e];
delete c[e];}}d.addConfig(b);},onFilterChange:function(a){var b;if(!a){b=null;}else{if(a.getDataSource){b=a.getDataSource();}else{b=a.getData();}}this.setDataSource(b);},onStoreChange:function(b,a){this.setStore(a);},updateDataSource:function(a){this.syncListeners(a,"$sourceListeners","getSourceListeners");
},updateOwner:function(a){this.syncListeners(a,"$ownerListeners","getOwnerListeners");this.setStore(a?a.getStore():null);},applyStore:function(a){return(a&&!a.isEmptyStore)?a:null;},updateStore:function(a){this.syncListeners(a,"$storeListeners","getStoreListeners");this.onFilterChange(a);},privates:{syncListeners:function(a,c,d){var e=this,b=e[c];
if(b){e[c]=null;b.destroy();}if(a){d=e[d]();d=Ext.applyIf({destroyable:true,scope:e},d);e[c]=a.on(d);}}}});