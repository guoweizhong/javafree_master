Ext.define("Ext.route.Router",{singleton:true,requires:["Ext.route.Action","Ext.route.Route","Ext.util.History"],config:{hashbang:null,multipleToken:"|",queueRoutes:true},constructor:function(){var a=Ext.util.History;if(!a.ready){a.init();}a.on("change",this.onStateChange,this);this.initConfig();this.clear();
},updateHashbang:function(a){Ext.util.History.hashbang=a;},onStateChange:function(c){var e=this,f=c.split(e.getMultipleToken()),a,b,d;if(e.isSuspended){a=e.suspendedQueue;b=0;d=f.length;if(a){for(;b<d;b++){c=f[b];if(!Ext.Array.contains(a,c)){a.push(c);}}}}else{e.handleBefore(f);}},handleBefore:function(c){var a=this,b=new Ext.route.Action();
if(Ext.fireEvent("beforeroutes",b,c)===false){b.destroy();}else{b.run().then(a.handleBeforeRoute.bind(a,c),Ext.emptyFn);}},handleBeforeRoute:function(c){var b=this,a=b.getByName("*");if(a){a.execute().then(b.doRun.bind(b,c),Ext.emptyFn);}else{b.doRun(c);}},doRun:function(j){var e=this.application,l=this.routes,h=0,d=j.length,c={},a=[],g,m,b,k,f;
for(;h<d;h++){g=j[h];m=false;for(b in l){k=l[b];f=k.recognize(g);if(f){m=true;if(f!==true){k.execute(g,f);}Ext.Array.remove(a,k);if(!c[b]){c[b]=1;}}else{if(!c[b]){a.push(k);}}}if(!m){if(e){e.fireEvent("unmatchedroute",g);}Ext.fireEvent("unmatchedroute",g);}}h=0;d=a.length;for(;h<d;h++){k=a[h];k.lastToken=null;
}},connect:function(f,e,a){var b=this.routes,d=e.name||f,c,d;if(f[0]==="!"){if(!Ext.util.History.hashbang){Ext.log({level:"error",msg:'Route found with "!" ("'+f+'"). Should use new hashbang functionality instead. '+"Please see the router guide for more: https://docs.sencha.com/extjs/"+Ext.getVersion().version+"/guides/application_architecture/router.html"});
}f=f.substr(1);this.setHashbang(true);}if(Ext.isString(e)){e={action:e,scope:a};}else{e.scope=a;}c=b[d];if(!c){c=b[d]=new Ext.route.Route({conditions:e.conditions||{},name:d,url:f});}c.addHandler(e);},disconnect:function(a,e){var b=this.routes,c,d;if(e){c=this.getByName(e.name||e.url);if(c){c.removeHandler(a,e);
}}else{for(d in b){c=b[d];c.removeHandler(a);}}},recognize:function(a){var j=this.routes,f=[],b,g,e,d,h,c;for(b in j){g=j[b];d=g&&g.length;if(d){e=0;for(;e<d;e++){h=g[e];c=h.recognize(a);if(c){f.push({route:h,urlParams:c});}}}}return f.length?f:false;},draw:function(a){a.call(this,this);},clear:function(){this.routes={};
},clearLastTokens:function(){var b=this.routes,c,a,d,e;for(c in b){a=b[c];e=a&&a.length;if(e){d=0;for(;d<e;d++){a[d].lastToken=null;}}}},getByName:function(b){var a=this.routes;if(a){return a[b];}},suspend:function(a){this.isSuspended=true;if(!this.suspendedQueue&&a!==false){this.suspendedQueue=[];}},resume:function(b){var d=this,a=d.suspendedQueue,c;
if(d.isSuspended){d.isSuspended=false;d.suspendedQueue=null;if(!b&&a){c=a.join(d.getMultipleToken());d.onStateChange(c);}}}});