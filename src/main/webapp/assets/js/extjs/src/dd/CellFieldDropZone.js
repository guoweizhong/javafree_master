Ext.define("Ext.ux.dd.CellFieldDropZone",{extend:"Ext.dd.DropZone",alias:"plugin.ux-cellfielddropzone",containerScroll:true,onCellDrop:Ext.emptyFn,constructor:function(b){if(b){var d=this,a=b.ddGroup,c=b.onCellDrop;if(c){if(typeof c==="string"){d.onCellDropFn=c;d.onCellDrop=d.callCellDrop;}else{d.onCellDrop=c;
}}if(a){d.ddGroup=a;}}},init:function(a){var b=this;if(a.rendered){b.grid=a;a.getView().on({render:function(c){b.view=c;Ext.ux.dd.CellFieldDropZone.superclass.constructor.call(b,b.view.el);},single:true});}else{a.on("render",b.init,b,{single:true});}},getTargetFromEvent:function(f){var d=this,b=d.view;
var a=f.getTarget(b.getCellSelector());if(a){var g=b.findItemByChild(a),c=a.cellIndex;if(g&&Ext.isDefined(c)){return{node:a,record:b.getRecord(g),fieldName:d.grid.getVisibleColumnManager().getColumns()[c].dataIndex};}}},onNodeEnter:function(h,a,g,d){delete this.dropOK;if(!h){return;}var b=d.field;if(!b){return;
}var c=h.record.fieldsMap[h.fieldName];if(c.isNumeric){if(!b.isXType("numberfield")){return;}}else{if(c.isDateField){if(!b.isXType("datefield")){return;}}else{if(c.isBooleanField){if(!b.isXType("checkbox")){return;}}}}this.dropOK=true;Ext.fly(h.node).addCls("x-drop-target-active");},onNodeOver:function(d,a,c,b){return this.dropOK?this.dropAllowed:this.dropNotAllowed;
},onNodeOut:function(d,a,c,b){Ext.fly(d.node).removeCls("x-drop-target-active");},onNodeDrop:function(f,a,d,c){if(this.dropOK){var b=c.field.getValue();f.record.set(f.fieldName,b);this.onCellDrop(f.fieldName,b);return true;}},callCellDrop:function(b,a){Ext.callback(this.onCellDropFn,null,[b,a],0,this.grid);
}});