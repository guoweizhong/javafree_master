Ext.define("Ext.app.Controller",{extend:"Ext.app.BaseController",requires:["Ext.app.Util","Ext.data.StoreManager","Ext.ComponentManager","Ext.app.domain.Component","Ext.app.domain.Store"],statics:{strings:{model:{getter:"getModel",upper:"Model"},view:{getter:"getView",upper:"View"},controller:{getter:"getController",upper:"Controller"},store:{getter:"getStore",upper:"Store"},profile:{getter:"getProfile",upper:"Profiles"}},controllerRegex:/^(.*)\.controller\./,profileRegex:/^(.*)\.profile\./,createGetter:function(a,b){return function(){return this[a](b);
};},getGetterName:function(c,a){var d="get",e=c.split("."),f=e.length,b;for(b=0;b<f;b++){d+=Ext.String.capitalize(e[b]);}d+=a;return d;},resolveNamespace:function(a,f){var g=Ext.app.Controller,e=a.prototype.isProfile?g.profileRegex:g.controllerRegex,d,c,b;d=Ext.getClassName(a);c=f.$namespace||f.namespace||Ext.app.getNamespace(d)||((b=e.exec(d))&&b[1]);
if(!c){Ext.log.warn("Missing namespace for "+d+", please define it "+"in namespaces property of your Application class.");}return c;},processDependencies:function(q,r,d,e,i,b){if(!i||!i.length){return;}var k=this,p=k.strings[e],c,n,m,a,f,g,l,h;if(!Ext.isArray(i)){i=[i];}for(f=0,g=i.length;f<g;f++){a=i[f];
c=k.getFullName(a,e,d,b);i[f]=n=c.absoluteName;m=c.shortName;r.push(n);l=k.getGetterName(m,p.upper);if(!q[l]){q[l]=h=k.createGetter(p.getter,a);}else{if(l==="getMainView"){Ext.log.warn("Cannot have a view named 'Main' - getter conflicts with mainView config.");}}if(h&&e!=="controller"){h["Ext.app.getter"]=true;
}}},getFullName:function(c,f,e,d){var a=c,b,g;if((b=c.indexOf("@"))>0){a=c.substring(0,b);g=c.substring(b+1)+"."+a;}else{if(c.indexOf(".")>0&&(Ext.ClassManager.isCreated(c)||this.hasRegisteredPrefix(c))){g=c;a=c.replace(e+"."+f+".","");}else{if(!e){Ext.log.warn("Cannot find namespace for "+f+" "+c+", "+"assuming it is fully qualified class name");
}if(e){g=e+"."+f+"."+(d?d+"."+c:c);a=c;}else{g=c;}}}return{absoluteName:g,shortName:a};},hasRegisteredPrefix:function(a){var c=Ext.ClassManager,b=c.getPrefix(a);return b&&b!==a;}},models:null,views:null,stores:null,controllers:null,config:{application:null,refs:null,active:true,moduleClassName:null},onClassExtended:function(b,c,a){var d=a.onBeforeCreated;
a.onBeforeCreated=function(e,i){var j=Ext.app.Controller,g=[],f,h;h=e.prototype;f=j.resolveNamespace(e,i);if(f){h.$namespace=f;}j.processDependencies(h,g,f,"model",i.models);j.processDependencies(h,g,f,"view",i.views);j.processDependencies(h,g,f,"store",i.stores);j.processDependencies(h,g,f,"controller",i.controllers);
Ext.require(g,Ext.Function.pass(d,arguments,this));};},constructor:function(a){this.initAutoGetters();this.callParent([a]);},normalizeRefs:function(b){var c=this,a=[];if(b){if(Ext.isObject(b)){Ext.Object.each(b,function(d,e){if(Ext.isString(e)){e={selector:e};}e.ref=d;a.push(e);});}else{if(Ext.isArray(b)){a=Ext.Array.merge(a,b);
}}}b=c.refs;if(b){c.refs=null;b=c.normalizeRefs(b);if(b){a=Ext.Array.merge(a,b);}}return a;},getRefMap:function(){var f=this,c=f._refMap,a,e,d,b;if(!c){a=f.getRefs();c=f._refMap={};if(a){for(b=0,d=a.length;b<d;b++){e=a[b];c[e.ref]=e.selector;}}}return c;},applyId:function(a){return a||Ext.app.Controller.getFullName(this.$className,"controller",this.$namespace).shortName;
},applyRefs:function(a){return this.normalizeRefs(Ext.clone(a));},updateRefs:function(a){if(a){this.ref(a);}},initAutoGetters:function(){var b=this.self.prototype,c,a;for(c in b){a=b[c];if(a&&a["Ext.app.getter"]){a.call(this);}}},doInit:function(b){var a=this;if(!a._initialized){a.init(b);a._initialized=true;
}},finishInit:function(f){var d=this,e=d.controllers,b,c,a;if(d._initialized&&e&&e.length){for(c=0,a=e.length;c<a;c++){b=d.getController(e[c]);b.finishInit(f);}}},init:Ext.emptyFn,onLaunch:Ext.emptyFn,activate:function(){this.setActive(true);},deactivate:function(){this.setActive(false);},isActive:function(){return this.getActive();
},ref:function(a){var f=this,b=0,e=a.length,g,d,c;a=Ext.Array.from(a);f.references=f.references||[];for(;b<e;b++){g=a[b];d=g.ref;c="get"+Ext.String.capitalize(d);if(!f[c]){f[c]=Ext.Function.pass(f.getRef,[d,g],f);}f.references.push(d.toLowerCase());}},addRef:function(a){this.ref(a);},getRef:function(d,f,a){var c=this,e=c.refCache||(c.refCache={}),b=e[d];
f=f||{};a=a||{};Ext.apply(f,a);if(f.forceCreate){return Ext.ComponentManager.create(f,"component");}if(!b){if(f.selector){e[d]=b=Ext.ComponentQuery.query(f.selector)[0];}if(!b&&f.autoCreate){e[d]=b=Ext.ComponentManager.create(f,"component");}if(b){b.on("destroy",function(){e[d]=null;});}}return b;},hasRef:function(b){var a=this.references;
return a&&Ext.Array.indexOf(a,b.toLowerCase())!==-1;},getController:function(b){var a=this.getApplication();if(b===this.getId()){return this;}return a&&a.getController(b);},getStore:function(c){var a,b;a=(c.indexOf("@")===-1)?c:c.split("@")[0];b=Ext.StoreManager.get(a);if(!b){c=Ext.app.Controller.getFullName(c,"store",this.$namespace);
if(c){b=Ext.create(c.absoluteName,{id:a});}}return b;},getModel:function(a){var c=Ext.app.Controller.getFullName(a,"model",this.$namespace),b=Ext.ClassManager.get(c.absoluteName);if(!b){b=Ext.data.schema.Schema.lookupEntity(a);}return b;},getProfile:function(a){a=Ext.app.Controller.getFullName(a,"profile",this.$namespace);
return a;},getView:function(a){var b=Ext.app.Controller.getFullName(a,"view",this.$namespace);return b&&Ext.ClassManager.get(b.absoluteName);},destroy:function(a,b){var d=this,f=d.application,e,c;if(!b&&f){f.unregister(d);}d.application=null;if(a){e=d.refCache;for(c in e){if(e.hasOwnProperty(c)){Ext.destroy(e[c]);
}}}d.callParent();}});