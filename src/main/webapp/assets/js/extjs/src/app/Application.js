Ext.define("Ext.app.Application",{extend:"Ext.app.Controller",requires:["Ext.util.History","Ext.util.MixedCollection"],isApplication:true,scope:undefined,namespaces:[],paths:null,config:{name:"",appProperty:"app",profiles:[],currentProfile:null,mainView:{$value:null,lazy:true},defaultToken:null,glyphFontFamily:null,quickTips:true,router:null},onClassExtended:function(h,c,g){var b=Ext.app.Controller,d=h.prototype,j=[],e,i,a,f;
a=c.name||h.superclass.name;if(a){c.$namespace=a;Ext.app.addNamespaces(a);}if(c.namespaces){Ext.app.addNamespaces(c.namespaces);}if(c["paths processed"]){delete c["paths processed"];}else{Ext.app.setupPaths(a,("appFolder" in c)?c.appFolder:h.superclass.appFolder,c.paths);}b.processDependencies(d,j,a,"profile",c.profiles);
d.getDependencies(h,c,j);if(j.length){e=g.onBeforeCreated;g.onBeforeCreated=function(k,m){var l=Ext.Array.clone(arguments);if(m.__handleRequires){m.__handleRequires.call(this,j,Ext.bind(function(){return e.apply(this,l);},this));return;}Ext.require(j,function(){return e.apply(this,l);});};}},getDependencies:Ext.emptyFn,constructor:function(a){var b=this;
Ext.route.Router.application=b;b.callParent([a]);if(Ext.isEmpty(b.getName())){Ext.raise("[Ext.app.Application] Name property is required");}b.doInit(b);Ext.on("appupdate",b.onAppUpdate,b,{single:true});Ext.Loader.setConfig({enabled:true});this.onProfilesReady();},applyId:function(a){return a||this.$className;
},updateRouter:function(a){if(a){Ext.route.Router.setConfig(a);}},onAppUpdate:Ext.emptyFn,onProfilesReady:function(){var e=this,b=e.getProfiles(),d=b.length,f,c,a;for(c=0;c<d;c++){a=Ext.create(b[c],{application:e});if(a.isActive()&&!f){f=a;e.setCurrentProfile(f);}}if(f){f.init();}e.initControllers();
e.onBeforeLaunch();e.finishInitControllers();},doInit:function(a){this.initNamespace(a);this.callParent([a]);},initNamespace:function(c){var a=c.getAppProperty(),b=Ext.namespace(c.getName());if(b){b.getApplication=function(){return c;};if(a){if(!b[a]){b[a]=c;}else{if(b[a]!==c){Ext.log.warn("An existing reference is being overwritten for "+name+"."+a+". See the appProperty config.");
}}}}},initControllers:function(){var d=this,e=Ext.Array.from(d.controllers),b=d.getCurrentProfile(),a,c;d.controllers=new Ext.util.MixedCollection();for(a=0,c=e.length;a<c;a++){d.getController(e[a]);}if(b){e=b.getControllers();for(a=0,c=e.length;a<c;a++){d.getController(e[a]);}}},finishInitControllers:function(){var c=this,d,b,a;
d=c.controllers.getRange();for(b=0,a=d.length;b<a;b++){d[b].finishInit(c);}},launch:Ext.emptyFn,onBeforeLaunch:function(){var i=this,e=Ext.util.History,a=i.getDefaultToken(),g=i.getCurrentProfile(),b,h,j,f,d;i.initMainView();if(g){g.launch();}i.launch.call(i.scope||i);i.launched=true;i.fireEvent("launch",i);
b=i.controllers.items;j=b.length;for(h=0;h<j;h++){f=b[h];f.onLaunch(i);}if(!e.ready){e.init();}d=e.getToken();if(d||d===a){Ext.route.Router.onStateChange(d);}else{if(a){e.replace(a);}}if(Ext.Microloader&&Ext.Microloader.appUpdate&&Ext.Microloader.appUpdate.updated){Ext.Microloader.fireAppUpdate();}if(!i.cnsTimer){i.cnsTimer=Ext.defer(Ext.ClassManager.clearNamespaceCache,2000,Ext.ClassManager);
}},getModuleClassName:function(a,b){return Ext.app.Controller.getFullName(a,b,this.getName()).absoluteName;},initMainView:function(){var c=this,b=c.getCurrentProfile(),a;if(b){a=b.getMainView();}if(a){c.setMainView(a);}else{c.getMainView();}},applyMainView:function(b){var a=this.getView(b);return a.create({$initParent:this.viewport});
},createController:function(a){return this.getController(a);},destroyController:function(a){if(typeof a==="string"){a=this.getController(a,true);}Ext.destroy(a);},getController:function(b,a){var k=this,d=k.controllers,h,f,g,e,j,l;f=d.get(b);if(!f){l=d.items;for(e=0,g=l.length;e<g;++e){j=l[e];h=j.getModuleClassName();
if(h&&h===b){f=j;break;}}}if(!f&&!a){h=k.getModuleClassName(b,"controller");f=Ext.create(h,{application:k,moduleClassName:h});d.add(f);if(k._initialized){f.doInit(k);}}return f;},unregister:function(a){this.controllers.remove(a);},getApplication:function(){return this;},destroy:function(a){var c=this,e=c.controllers,b=Ext.namespace(c.getName()),d=c.getAppProperty();
clearTimeout(c.cnsTimer);Ext.un("appupdate",c.onAppUpdate,c);Ext.destroy(c.viewport);if(e){e.each(function(f){f.destroy(a,true);});}c.controllers=null;c.callParent([a,true]);if(b&&b[d]===c){delete b[d];}if(Ext.route.Router.application===c){Ext.route.Router.application=null;}if(Ext.app.Application.instance===c){Ext.app.Application.instance=null;
}},updateGlyphFontFamily:function(a){Ext.setGlyphFontFamily(a);},applyProfiles:function(a){var b=this;return Ext.Array.map(a,function(c){return b.getModuleClassName(c,"profile");});}},function(){Ext.getApplication=function(){return Ext.app.Application.instance;};});