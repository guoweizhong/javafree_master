Ext.define("Ext.app.bind.Parser",{extend:"Ext.parse.Parser",requires:["Ext.util.Format"],infix:{":":{priority:70,dump:function(){var d=this,b={at:d.at,arity:d.arity,value:d.value,operand:d.operand.dump(),fmt:[]},a=d.fmt,c;for(c=0;c<a.length;++c){b.fmt.push(a[c].dump());}return b;},led:function(b){var a=this;
a.arity="formatter";a.operand=b;a.fmt=a.parser.parseFmt();return a;}},"?":{priority:20,led:function(d){var b=this,e=b.parser,c=e.symbols[":"],a;b.condition=d;a=c.priority;c.priority=0;b.tv=e.parseExpression(0);b.parser.advance(":");c.priority=a;b.fv=e.parseExpression(0);b.arity="ternary";return b;}},"===":40,"!==":40,"==":40,"!=":40,"<":40,"<=":40,">":40,">=":40},symbols:{"(":{nud:function(){var d=this.parser,c=d.symbols[":"],b,a;
a=c.priority;c.priority=70;b=d.parseExpression();d.advance(")");c.priority=a;return b;}}},prefix:{"@":0},tokenizer:{operators:{"@":"at","?":"qmark","===":"feq","!==":"fneq","==":"eq","!=":"neq","<":"lt","<=":"lte",">":"gt",">=":"gte","&&":"and","||":"or"}},compileExpression:function(e,d){var c=this,a,b;
c.tokens=e;c.tokensMap=d;a=c.token.value==="@"&&c.tokenizer.peek();if(a){a=a.value==="debugger";if(a){c.advance();c.advance();}}b=c.parseSlot(c.parseExpression(),a);c.tokens=c.tokensMap=null;return b;},compileFormat:function(){var a;try{a=this.parseSlot({arity:"formatter",fmt:this.parseFmt(),operand:{arity:"ident",value:"dummy"}});
this.expect("(end)");}catch(b){Ext.raise('Invalid format expression: "'+this.tokenizer.text+'"');}return a;},privates:{useEval:Ext.isGecko,escapeRe:/("|'|\\)/g,parseFmt:function(){var c=this,a=[],b=c.symbols[":"].priority,d;do{if(a.length){c.advance();}d=c.parseExpression(b);if(d.isIdent||d.isInvoke){a.push(d);
}else{c.syntaxError(d.at,"Expected formatter name");}}while(c.token.id===":");return a;},parseSlot:function(k,a){var h=this,d=[],f=[],g=h.tokens||[],j,b,e,c,l;h.definitions=d;h.body=f;f.push("return "+h.compile(k)+";");c=g.length;b="var fm = Ext.util.Format,\nme,";l="var a = Ext.Array.from(values);\nme = scope;\n";
if(g.length){for(e=0;e<c;e++){b+="v"+e+((e==c-1)?";":",");l+="v"+e+" = a["+e+"]; ";}}else{b+="v0;";l+="v0 = a[0];";}d=Ext.Array.insert(d,0,[b]);f=Ext.Array.insert(f,0,[l]);f=f.join("\n");if(a){f="debugger;\n"+f;}d.push((h.useEval?"$=":"return")+" function (values, scope) {",f,"}");b=d.join("\n");j=h.useEval?h.evalFn(b):(new Function("Ext",b))(Ext);
h.definitions=h.body=null;return j;},compile:function(c){var b=this,a;switch(c.arity){case"ident":return b.addToken(c.value);case"literal":a=c.value;return(typeof a==="string")?'"'+String(a).replace(b.escapeRe,"\\$1")+'"':a;case"unary":return b.compileUnary(c);case"binary":return b.compileBinary(c);case"ternary":return b.compileTernary(c);
case"formatter":return b.compileFormatter(c);}return this.syntaxError(c.at,"Compile error! Unknown symbol");},compileUnary:function(b){var a=b.value,c=b.operand;if(a==="!"||a==="-"||a==="+"){return a+"("+this.compile(c)+")";}else{if(a==="@"){if(!c.isIdent){return this.syntaxError(b.at,"Compile error! Unexpected symbol");
}return c.value;}}return"";},compileBinary:function(a){return"("+this.compile(a.lhs)+" "+a.value+" "+this.compile(a.rhs)+")";},compileTernary:function(a){return"("+this.compile(a.condition)+" ? "+this.compile(a.tv)+" : "+this.compile(a.fv)+")";},compileFormatter:function(f){var e=this,b=f.fmt,d=b.length,a=["var ret;"],c;
if(b.length){a.push("ret = "+e.compileFormatFn(b[0],e.compile(f.operand))+";");for(c=1;c<d;c++){a.push("ret = "+e.compileFormatFn(b[c],"ret")+";");}}a.push("return ret;");return e.addFn(a.join("\n"));},compileFormatFn:function(g,f){var a,b=[],e="",d,c;if(g.isIdent){a=g.value;}else{if(g.isInvoke){a=g.operand.value;
b=g.args;}}if(a.substring(0,5)==="this."){a="me."+a.substring(5);}else{if(!(a in Ext.util.Format)){return this.syntaxError(g.at,'Compile error! Invalid format specified "'+a+'"');}a="fm."+a;}e+=f;d=b.length;for(c=0;c<d;c++){e+=", "+this.compile(b[c]);}return a+"("+e+")";},addFn:function(b){var a=this.definitions,c="f"+a.length;
a.push("function "+c+"() {",b,"}");return c+"()";},evalFn:function($){eval($);return $;},addToken:function(a){var b=this.tokensMap,c=this.tokens,d=0;if(b&&c){if(a in b){d=b[a];}else{b[a]=d=c.length;c.push(a);}}return"v"+d;}}});