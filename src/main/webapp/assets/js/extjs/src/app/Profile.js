Ext.define("Ext.app.Profile",{mixins:["Ext.mixin.Observable"],requires:["Ext.app.Controller"],isProfile:true,config:{mainView:{$value:null,lazy:true},application:null,controllers:[],models:[],views:[],stores:[]},constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.apply(this,arguments);
},isActive:function(){return false;},init:function(){var a=this.getViews(),b;if(a&&!(a instanceof Array)){for(b in a){Ext.ClassManager.setXType(a[b],b);}}},launch:Ext.emptyFn,onClassExtended:function(b,c,a){var d=a.onBeforeCreated;a.onBeforeCreated=function(l,h){var g=Ext.app.Controller,j=l.$className,m=[],i=l.prototype,k=h.views,e,f;
e=h.name;if(e){delete h.name;}else{e=j.split(".");e=e[e.length-1];}l._name=e;l._namespace=e=(h.namespace||e).toLowerCase();delete h.namespace;f=g.resolveNamespace(l,h);g.processDependencies(i,m,f,"model",h.models,e);g.processDependencies(i,m,f,"store",h.stores,e);g.processDependencies(i,m,f,"controller",h.controllers,e);
if(k){if(k instanceof Array){g.processDependencies(i,m,f,"view",k,e);}else{Ext.app.Profile.processViews(j,k,m);}}Ext.require(m,Ext.Function.pass(d,arguments,this));};},getName:function(){return this.self._name;},getNamespace:function(){return this.self._namespace;},privates:{statics:{processViews:function(f,c,e){var a,b,d,g;
for(g in c){b=c[g];if(typeof b!=="string"){d=b.xclass;if(!d){Ext.raise("Views must specify an xclass");}a=Ext.apply({extend:d},b);delete a.xclass;Ext.define(c[g]=f+"$"+g,a);b=d;}e.push(b);}}}}});