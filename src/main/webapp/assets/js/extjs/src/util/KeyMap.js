Ext.define("Ext.util.KeyMap",{alternateClassName:"Ext.KeyMap",eventName:"keydown",constructor:function(a){var b=this;if((arguments.length!==1)||(typeof a==="string")||a.dom||a.tagName||a===document||a.isComponent){Ext.raise("Legacy multi-argument KeyMap constructor is removed. Use a config object instead.");
}Ext.apply(b,a);b.bindings=[];if(!b.target.isComponent){b.target=Ext.get(b.target);}if(b.binding){b.addBinding(b.binding);}else{if(a.key){b.addBinding(a);}}b.enable();},addBinding:function(e){var c=this,d=e.key,b,a;if(c.processing){c.bindings=c.bindings.slice(0);}if(Ext.isArray(e)){for(b=0,a=e.length;
b<a;b++){c.addBinding(e[b]);}return;}c.bindings.push(Ext.apply({keyCode:c.processKeys(d)},e));},removeBinding:function(f){var e=this,g=e.bindings,a=g.length,b,d,c;if(e.processing){e.bindings=g.slice(0);}c=e.processKeys(f.key);for(b=0;b<a;b++){d=g[b];if((d.fn||d.handler)===(f.fn||f.handler)&&d.scope===f.scope){if(f.alt===d.alt&&f.ctrl===d.ctrl&&f.shift===d.shift){if(Ext.Array.equals(d.keyCode,c)){Ext.Array.erase(e.bindings,b,1);
return;}}}}},processKeys:function(f){var g=false,d,e,b,a,c;if(f.test){return f;}if(Ext.isString(f)){e=[];b=f.toUpperCase();for(c=0,a=b.length;c<a;c++){e.push(b.charCodeAt(c));}f=e;g=true;}if(!Ext.isArray(f)){f=[f];}if(!g){for(c=0,a=f.length;c<a;c++){d=f[c];if(Ext.isString(d)){f[c]=d.toUpperCase().charCodeAt(0);
}}}return f;},handleTargetEvent:function(e){var d=this,f,c,b,a;if(d.enabled){f=d.bindings;e=d.processEvent.apply(d.processEventScope||d,arguments);if(e){d.lastKeyEvent=e;if(d.ignoreInputFields&&Ext.fly(e.target).isInputField()){return;}if(!e.getKey){return e;}d.processing=true;for(c=0,b=f.length;c<b;
c++){a=d.processBinding(f[c],e);if(a===false){d.processing=false;return a;}}d.processing=false;}}},processEvent:Ext.identityFn,processBinding:function(e,a){if(this.checkModifiers(e,a)){var f=a.getKey(),h=e.fn||e.handler,j=e.scope||this,g=e.keyCode,b=e.defaultEventAction,c,d,k;if(g.test){if(g.test(String.fromCharCode(a.getCharCode()))){k=h.call(j,f,a);
if(k!==true&&b){a[b]();}if(k===false){return k;}}}else{if(g.length){for(c=0,d=g.length;c<d;c++){if(f===g[c]){k=h.call(j,f,a);if(k!==true&&b){a[b]();}if(k===false){return k;}break;}}}}}},checkModifiers:function(g,e){var d=["shift","ctrl","alt"],c,a,f,b;for(c=0,a=d.length;c<a;c++){b=d[c];f=g[b];if(!(f===undefined||(f===e[b+"Key"]))){return false;
}}return true;},on:function(b,d,c){var g,a,e,f;if(Ext.isObject(b)&&!Ext.isArray(b)){g=b.key;a=b.shift;e=b.ctrl;f=b.alt;}else{g=b;}this.addBinding({key:g,shift:a,ctrl:e,alt:f,fn:d,scope:c});},un:function(b,d,c){var g,a,e,f;if(Ext.isObject(b)&&!Ext.isArray(b)){g=b.key;a=b.shift;e=b.ctrl;f=b.alt;}else{g=b;
}this.removeBinding({key:g,shift:a,ctrl:e,alt:f,fn:d,scope:c});},isEnabled:function(){return !!this.enabled;},enable:function(){var a=this;if(!a.enabled){a.target.on(a.eventName,a.handleTargetEvent,a,{capture:a.capture,priority:a.priority});a.enabled=true;}},disable:function(){var a=this;if(a.enabled){if(!a.target.destroyed){a.target.removeListener(a.eventName,a.handleTargetEvent,a);
}a.enabled=false;}},setDisabled:function(a){if(a){this.disable();}else{this.enable();}},destroy:function(c){var a=this,b=a.target;a.bindings=[];a.disable();a.target=null;if(c){b.destroy();Ext.raise("Using removeTarget argument in KeyMap destructor is not supported.");}a.callParent();}});