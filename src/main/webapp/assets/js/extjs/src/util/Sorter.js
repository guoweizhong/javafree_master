Ext.define("Ext.util.Sorter",{isSorter:true,config:{property:null,sorterFn:null,root:null,transform:null,direction:"ASC",id:undefined},statics:{createComparator:function(b,a){a=a||0;return function(c,h){var e=b.isCollection?b.items:b,g=e.length,d,f;for(f=0;f<g;++f){d=e[f].sort(c,h);if(d){return d;}}return a&&a(c,h);
};}},multiplier:1,constructor:function(a){if(a&&!this.isGrouper){if(!a.property===!a.sorterFn){Ext.raise("A Sorter requires either a property or a sorterFn.");}}this.initConfig(a);},getId:function(){var a=this._id;if(!a){a=this.getProperty();if(!a){a=Ext.id(null,"ext-sorter-");}this._id=a;}return a;},sort:function(a,b){return this.multiplier*this.sortFn(a,b);
},sortFn:function(d,c){var f=this,e=f._transform,b=f._root,g=f._property,a,h;if(b){d=d[b];c=c[b];}a=d[g];h=c[g];if(e){a=e(a);h=e(h);}return(a>h)?1:(a<h?-1:0);},applyDirection:function(a){return a?a:"ASC";},updateDirection:function(a){this.multiplier=(a.toUpperCase()==="DESC")?-1:1;},updateProperty:function(a){if(a){delete this.sortFn;
}},updateSorterFn:function(a){this.sortFn=a;},toggle:function(){this.setDirection(Ext.String.toggle(this.getDirection(),"ASC","DESC"));},getState:function(){var b=this,a={root:b.getRoot(),property:b.getProperty(),direction:b.getDirection()};if(b._id){a.id=b._id;}return a;},serialize:function(){return{property:this.getProperty(),direction:this.getDirection()};
}});