Ext.define("Ext.util.Spans",{isSpans:true,constructor:function(){this.spans=this.spans||[];},clear:function(){this.spans.length=0;return this;},add:function(a,c){if(c===undefined){if(typeof a==="number"){c=a+1;}else{c=a[1];a=a[0];}}var h=this,g=h.spans,i,f,d,k,j;d=h.bisect(a);if(d){j=g[d-1];i=j[0];f=j[1];
if(a<=f){if(c<=f){return false;}a=i;g.splice(--d,1);}}k=h.bisect(c);if(k>d){j=g[k-1];c=Math.max(c,j[1]);}if(k<g.length){j=g[k];if(c===j[0]){c=j[1];++k;}}g.splice(d,k-d,[a,c]);return true;},contains:function(g,a){if(a===undefined){if(typeof g==="number"){a=g+1;}else{a=g[1];g=g[0];}}var d=this.spans,c=this.bisect(g),b=false,h,f;
if(c&&g<(h=d[c-1][1])){b=a<=h;}else{if(c<d.length){f=d[c];b=f[0]<=g&&a<=f[1];}}return b;},each:function(g,f){var d=this.spans,a=d.length,c,e,b;for(c=0;c<a;c++){e=d[c];for(b=e[0];b<e[1];b++){if(g.call(f||this,c)===false){return;}}}},intersects:function(e,a){if(a===undefined){if(typeof e==="number"){a=e+1;
}else{a=e[1];e=e[0];}}var d=this.spans,c=this.bisect(e),b=false;if(c&&e<d[c-1][1]){b=true;}else{if(c<d.length){b=d[c][0]<a;}}return b;},remove:function(a,b){if(b===undefined){if(typeof a==="number"){b=a+1;}else{b=a[1];a=a[0];}}var g=this,e=g.spans,d=g.bisect(a),f=false,i,h,c;if(d){h=e[d-1];c=h[1];if(a<c){h[1]=a;
if(b<c){e.splice(d,0,[b,c]);return true;}f=true;}}i=g.bisect(b);if(d<i){f=true;h=e[i-1];if(b<h[1]){h[0]=b;--i;}i-=d;if(i){e.splice(d,i);}}return f;},stash:function(){return this.spans.slice();},unstash:function(a){this.spans=a;return this;},getCount:function(){var d=this.spans,b=d.length,a=0,c,e;for(c=0;
c<b;c++){e=d[c];a+=e[1]-e[0];}return a;},privates:{bisect:function(a){return Ext.Number.bisectTuples(this.spans,a,0);}}});