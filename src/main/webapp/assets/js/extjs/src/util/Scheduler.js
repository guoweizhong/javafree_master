Ext.define("Ext.util.Scheduler",{mixins:["Ext.mixin.Observable"],requires:["Ext.util.Bag"],busyCounter:0,lastBusyCounter:0,destroyed:false,firing:null,notifyIndex:-1,nextId:0,orderedItems:null,passes:0,scheduledCount:0,validIdRe:null,config:{cycleLimit:5,preSort:null,tickDelay:5},suspendOnNotify:true,constructor:function(a){if(Ext.util.Scheduler.instances){Ext.util.Scheduler.instances.push(this);
}else{Ext.util.Scheduler.instances=[this];}this.id=Ext.util.Scheduler.count=(Ext.util.Scheduler.count||0)+1;this.mixins.observable.constructor.call(this,a);this.items=new Ext.util.Bag();},destroy:function(){var a=this,b=a.timer;if(b){window.clearTimeout(b);a.timer=null;}a.items.destroy();a.items=a.orderedItems=null;
a.callParent();Ext.Array.remove(Ext.util.Scheduler.instances,this);},add:function(c){var b=this,a=b.items;if(a===b.firing){b.items=a=a.clone();}c.id=c.id||++b.nextId;c.scheduler=b;a.add(c);if(!b.sortMap){b.orderedItems=null;}},remove:function(c){var b=this,a=b.items;if(b.destroyed){return;}if(b.sortMap){Ext.raise("Items cannot be removed during sort");
}if(a===b.firing){b.items=a=a.clone();}if(c.scheduled){b.unscheduleItem(c);c.scheduled=false;}a.remove(c);b.orderedItems=null;},sort:function(){var d=this,a=d.items,e={},f=d.getPreSort(),b,c;d.orderedItems=[];d.sortMap=e;d.sortStack=[];if(f){a.sort(f);}a=a.items;for(b=0;b<a.length;++b){c=a[b];if(!e[c.id]){d.sortItem(c);
}}d.sortMap=null;d.sortStack=null;},sortItem:function(e){var d=this,f=d.sortMap,a=d.orderedItems,g;if(!e.scheduler){d.add(e);}g=e.id;if(e.scheduler!==d){Ext.raise("Item "+g+" belongs to another Scheduler");}d.sortStack.push(e);if(f[g]===0){for(var c=[],b=0;b<d.sortStack.length;++b){c[b]=d.sortStack[b].getFullName();
}Ext.raise("Dependency cycle detected: "+c.join("\n --> "));}if(!(g in f)){f[g]=0;if(!e.sort.$nullFn){e.sort();}f[g]=1;e.order=d.orderedItems.length;a.push(e);}d.sortStack.pop();return d;},sortItems:function(a){var b=this,c=b.sortItem;if(a){if(a instanceof Array){Ext.each(a,c,b);}else{Ext.Object.eachValue(a,c,b);
}}return b;},applyPreSort:function(g){if(typeof g==="function"){return g;}var f=g.split(","),e=[],d=f.length,h,a,b;for(a=0;a<d;++a){e[a]=1;b=f[a];if((h=b.charAt(0))==="-"){e[a]=-1;}else{if(h!=="+"){h=0;}}if(h){f[a]=b.substring(1);}}return function(c,o){var j=0,k,n,m,l;for(k=0;!j&&k<d;++k){n=f[k];m=c[n];
l=o[n];j=e[k]*((m<l)?-1:((l<m)?1:0));}return j;};},notify:function(){var j=this,b=j.timer,d=j.getCycleLimit(),c=Ext.GlobalEvents,g=j.suspendOnNotify,l,e,k,h,f,a;if(b){window.clearTimeout(b);j.timer=null;}if(!j.firing&&j.scheduledCount){if(g){Ext.suspendLayouts();}while(j.scheduledCount){if(d){--d;}else{j.firing=null;
if(j.onCycleLimitExceeded){j.onCycleLimitExceeded();}break;}if(!a){a=true;if(c.hasListeners.beforebindnotify){c.fireEvent("beforebindnotify",j);}}++j.passes;if(!(f=j.orderedItems)){j.sort();f=j.orderedItems;}h=f.length;if(h){j.firing=j.items;for(e=0;e<h;++e){k=f[e];if(k.scheduled){k.scheduled=false;--j.scheduledCount;
j.notifyIndex=e;k.react();if(!j.scheduledCount){break;}}}}}j.firing=null;j.notifyIndex=-1;if(g){Ext.resumeLayouts(true);}}if((l=j.busyCounter)!==j.lastBusyCounter){if(!(j.lastBusyCounter=l)){j.fireEvent("idle",j);}}},onTick:function(){this.timer=null;this.notify();},scheduleItem:function(b){var a=this;
++a.scheduledCount;if(!a.timer&&!a.firing){a.scheduleTick();}},scheduleTick:function(){var a=this;if(!a.destroyed&&!a.timer){a.timer=Ext.Function.defer(a.onTick,a.getTickDelay(),a);}},unscheduleItem:function(a){if(this.scheduledCount){--this.scheduledCount;}},adjustBusy:function(a){var b=this,c=b.busyCounter+a;
b.busyCounter=c;if(c){if(!b.lastBusyCounter){b.lastBusyCounter=c;b.fireEvent("busy",b);}}else{if(b.lastBusyCounter&&!b.timer){b.scheduleTick();}}},isBusy:function(){return !this.isIdle();},isIdle:function(){return !(this.busyCounter+this.lastBusyCounter);},debugHooks:{$enabled:false,onCycleLimitExceeded:function(){Ext.raise("Exceeded cycleLimit "+this.getCycleLimit());
},scheduleItem:function(a){if(!a){Ext.raise("scheduleItem: Invalid argument");}Ext.log("Schedule item: "+a.getFullName()+" - "+(this.scheduledCount+1));if(a.order<=this.notifyIndex){Ext.log.warn("Suboptimal order: "+a.order+" < "+this.notifyIndex);}this.callParent([a]);},unscheduleItem:function(a){if(!this.scheduledCount){Ext.raise("Invalid scheduleCount");
}this.callParent([a]);Ext.log("Unschedule item: "+a.getFullName()+" - "+this.scheduledCount);}}});