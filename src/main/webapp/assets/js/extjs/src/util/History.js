Ext.define("Ext.util.History",{singleton:true,alternateClassName:"Ext.History",mixins:{observable:"Ext.util.Observable"},useTopWindow:false,hashRe:/^(#?!?)/,constructor:function(){var a=this;a.ready=false;a.currentToken=null;a.mixins.observable.constructor.call(a);},getHash:function(){return this.win.location.hash.replace(this.hashRe,"");
},setHash:function(f,b){var c=this,a=c.hashRe,g=c.win.location;f=f.replace(a,c.hashbang?"#!":"#");try{if(b){g.replace(f);}else{g.hash=f;}c.currentToken=f.replace(a,"");}catch(d){}},handleStateChange:function(a){a=a.replace(this.hashRe,"");this.fireEvent("change",this.currentToken=a);},startUp:function(){var a=this;
a.currentToken=a.getHash();Ext.get(a.win).on("hashchange",a.onHashChange,a);a.ready=true;a.fireEvent("ready",a);},onHashChange:function(){var b=this,a=b.getHash();if(a!==b.hash){b.hash=a;b.handleStateChange(a);}},init:function(c,a){var b=this;if(b.ready){Ext.callback(c,a,[b]);return;}if(!Ext.isReady){Ext.onInternalReady(function(){b.init(c,a);
});return;}b.win=b.useTopWindow?window.top:window;b.hash=b.getHash();if(c){b.on("ready",c,a,{single:true});}b.startUp();},add:function(a,b){var c=this,d=false;if(b===false||c.getToken()!==a){c.setHash(a);d=true;}return d;},replace:function(a,b){var c=this,d=false;if(b===false||c.getToken()!==a){this.setHash(a,true);
d=true;}return d;},back:function(){this.win.history.go(-1);},forward:function(){this.win.history.go(1);},getToken:function(){return this.ready?this.currentToken:this.getHash();}});