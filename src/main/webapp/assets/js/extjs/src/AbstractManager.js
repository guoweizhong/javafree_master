Ext.define("Ext.AbstractManager",{requires:["Ext.util.HashMap"],typeName:"type",constructor:function(a){Ext.apply(this,a||{});this.all=new Ext.util.HashMap();this.types={};},get:function(a){return this.all.get(a);},register:function(b){var a=this.all.getKey(b);if(a===undefined){Ext.raise("Key is undefined. Please ensure the item has a key before registering the item.");
}if(this.all.containsKey(a)){Ext.raise('Registering duplicate id "'+a+'" with '+this.$className);}this.all.add(b);},unregister:function(a){this.all.remove(a);},registerType:function(b,a){this.types[b]=a;a[this.typeName]=b;},isRegistered:function(a){return this.types[a]!==undefined;},create:function(a,d){var b=a[this.typeName]||a.type||d,c=this.types[b];
if(c===undefined){Ext.raise("The '"+b+"' type has not been registered with this manager");}return new c(a);},onAvailable:function(f,c,b){var a=this.all,d,e;if(a.containsKey(f)){d=a.get(f);c.call(b||d,d);}else{e=function(i,g,h){if(g==f){c.call(b||h,h);a.un("add",e);}};a.on("add",e);}},each:function(b,a){this.all.each(b,a||this);
},getCount:function(){return this.all.getCount();}});