Ext.define("Ext.promise.Promise",function(b){var a;return{requires:["Ext.promise.Deferred"],statics:{CancellationError:Ext.global.CancellationError||Error,_ready:function(){a=Ext.promise.Deferred;},all:function(c){if(!(Ext.isArray(c)||b.is(c))){Ext.raise("Invalid parameter: expected an Array or Promise of an Array.");
}return b.when(c).then(function(e){var m=new a(),h=e.length,f=new Array(h),k,d,l,g,j;if(!h){m.resolve(f);}else{l=function(n,i){return b.when(n).then(function(o){f[i]=o;if(!--h){m.resolve(f);}return o;},function(o){return m.reject(o);});};for(k=g=0,j=e.length;g<j;k=++g){d=e[k];if(k in e){l(d,k);}else{h--;
}}}return m.promise;});},is:function(c){return c!=null&&(typeof c==="object"||Ext.isFunction(c))&&Ext.isFunction(c.then);},race:function(f){if(!Ext.isArray(f)){Ext.raise("Invalid parameter: expected an Array.");}var d=new a(),c=f.length,e;for(e=0;e<c;++e){d.resolve(f[e]);}return d.promise;},rethrowError:function(c){Ext.asap(function(){throw c;
});},when:function(d){var c=new a();c.resolve(d);return c.promise;}},owner:null,constructor:function(c){this.owner=c;},then:function(g,c,f,d){var e;if(arguments.length===1&&Ext.isObject(arguments[0])){e=arguments[0];g=e.success;c=e.failure;f=e.progress;d=e.scope;}if(d){if(g){g=Ext.Function.bind(g,d);
}if(c){c=Ext.Function.bind(c,d);}if(f){f=Ext.Function.bind(f,d);}}return this.owner.then(g,c,f);},"catch":function(c,d){var e;if(arguments.length===1&&Ext.isObject(arguments[0])){e=arguments[0];c=e.fn;d=e.scope;}if(d!=null){c=Ext.Function.bind(c,d);}return this.owner.then(null,c);},otherwise:function(c,d){return this["catch"].apply(this,arguments);
},always:function(c,d){var e;if(arguments.length===1&&Ext.isObject(arguments[0])){e=arguments[0];c=e.fn;d=e.scope;}if(d!=null){c=Ext.Function.bind(c,d);}return this.owner.then(function(f){try{c();}catch(g){b.rethrowError(g);}return f;},function(g){try{c();}catch(f){b.rethrowError(f);}throw g;});},done:function(){this.owner.then(null,b.rethrowError);
},cancel:function(c){if(c==null){c=null;}this.owner.reject(new this.self.CancellationError(c));},log:function(c){if(c==null){c="";}return this.owner.then(function(d){Ext.log(""+(c||"Promise")+" resolved with value: "+d);return d;},function(d){Ext.log(""+(c||"Promise")+" rejected with reason: "+d);throw d;
});}};},function(a){a._ready();});