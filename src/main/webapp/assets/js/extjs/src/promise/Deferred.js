Ext.define("Ext.promise.Deferred",{requires:["Ext.promise.Consequence"],promise:null,consequences:[],completed:false,completionAction:null,completionValue:null,constructor:function(){var a=this;a.promise=new Ext.promise.Promise(a);a.consequences=[];a.completed=false;a.completionAction=null;a.completionValue=null;
},then:function(e,a,d){var c=this,b=new Ext.promise.Consequence(e,a,d);if(c.completed){b.trigger(c.completionAction,c.completionValue);}else{c.consequences.push(b);}return b.promise;},resolve:function(d){var c=this,a,b;if(c.completed){return;}try{if(d===c.promise){throw new TypeError("A Promise cannot be resolved with itself.");
}if(d!=null&&(typeof d==="object"||Ext.isFunction(d))&&Ext.isFunction(b=d.then)){a=false;try{b.call(d,function(g){if(!a){a=true;c.resolve(g);}},function(g){if(!a){a=true;c.reject(g);}});}catch(f){if(!a){c.reject(f);}}}else{c.complete("fulfill",d);}}catch(e){c.reject(e);}},reject:function(a){if(this.completed){return;
}this.complete("reject",a);},update:function(b){var e=this.consequences,d,c,a;if(this.completed){return;}for(c=0,a=e.length;c<a;c++){d=e[c];d.update(b);}},complete:function(f,e){var d=this,g=d.consequences,c,b,a;d.completionAction=f;d.completionValue=e;d.completed=true;for(b=0,a=g.length;b<a;b++){c=g[b];
c.trigger(d.completionAction,d.completionValue);}d.consequences=null;}});